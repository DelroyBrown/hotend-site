# Generated by Django 3.2.12 on 2022-09-08 12:10
import pandas as pd

from django.db import migrations
from django.db.models import F
from django.db.transaction import atomic
from django_bulk_update.helper import bulk_update

from core.utils import suppress_autotime


@atomic
def forwards(apps, schema_editor):
    V7CuringQCEvent = apps.get_model('v7_post_curing_qc', 'V7CuringQCEvent')
    Event = apps.get_model('base_models', 'Event')

    with suppress_autotime(Event, ['date_updated']):
        sub_events = V7CuringQCEvent.objects.only('id', 'result')
        events = Event.objects.filter(id__in=sub_events).only('fail_state_tmp')
        for obj, sub_obj in zip(events, sub_events):
            fail_state = sub_obj.result
            if fail_state == "Passed":
                fail_state = "None"
            obj.fail_state_tmp = fail_state
        bulk_update(events, update_fields=['fail_state_tmp'], batch_size=10000)


class Migration(migrations.Migration):

    dependencies = [
        ('v7_post_curing_qc', '0014_alter_v7curingqcevent_log_temperatures'),
        ('base_models', '0009_event_fail_state'),
    ]

    operations = [
        migrations.RunPython(forwards, migrations.RunPython.noop),
        migrations.RemoveField(
            model_name='v7curingqcevent',
            name='result',
        ),
    ]
